{"version":3,"sources":["components/CardForm.jsx","utils/capitalize.js","components/CardPreview.jsx","components/Card.jsx","components/Deck.jsx","assets/images/eevee.png","assets/images/pokeball.png","components/Header.jsx","assets/images/pikachu.png","components/DeckFilters.jsx","App.js","index.js"],"names":["CardForm","value","useState","isSaveBtnDisabled","setIsSaveBtnDisabled","cardData","setCardData","handleChanger","target","inputValue","type","checked","prevState","name","useEffect","cardName","cardImage","cardDescription","cardAttr1","cardAttr2","cardAttr3","Number","verifyCardData","id","className","onChange","hasTrunfo","cardTrunfo","cardRare","href","deckCards","length","disabled","onClick","newCard","newDeck","push","localStorage","setItem","JSON","stringify","filteredDeck","capitalize","phrase","split","map","word","toUpperCase","substring","join","CardPreview","isImage","setIsImage","Aos","init","duration","verifyCardImage","a","response","test","src","alt","Card","Deck","deleteCard","targetCard","parentElement","filter","card","indexOf","stillHasTrunfo","find","index","Header","Eevee","Pokeball","rel","DeckFilters","nameFilter","rareFilter","trunfoFilter","filterParams","setFilterParams","newFilteredDeck","toLowerCase","includes","Pikachu","App","recoveredDeck","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8b1cdda.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/CardForm.css';\nimport PropTypes from 'prop-types';\n\nconst ATTRLIMITER = 90;\nconst ALLATTRSUMLIMITER = 210;\n\nexport default function CardForm({ value }) {\n  const [isSaveBtnDisabled, setIsSaveBtnDisabled] = useState(true);\n\n  const { cardData, setCardData } = value;\n\n  const handleChanger = ({ target }) => {\n    const inputValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    setCardData((prevState) => (\n      { ...prevState, [target.name]: inputValue }\n    ));\n  };\n\n  const saveCard = () => {\n    const { cardName, cardImage, cardDescription,\n      cardAttr1, cardAttr2, cardAttr3, cardTrunfo, cardRare, deckCards } = cardData;\n\n    const newCard = {\n      cardName,\n      cardImage,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardTrunfo,\n      cardRare,\n    };\n    const newDeck = deckCards;\n\n    newDeck.push(newCard);\n\n    localStorage.setItem('deck', JSON.stringify(newDeck));\n\n    if (cardTrunfo) {\n      return setCardData({\n        ...cardData,\n        cardName: '',\n        cardImage: '',\n        cardDescription: '',\n        cardAttr1: '0',\n        cardAttr2: '0',\n        cardAttr3: '0',\n        cardTrunfo: false,\n        cardRare: 'normal',\n        hasTrunfo: true,\n        deckCards: newDeck,\n        filteredDeck: newDeck,\n      });\n    }\n    return setCardData({\n      ...cardData,\n      cardName: '',\n      cardImage: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardTrunfo: false,\n      cardRare: 'normal',\n      deckCards: newDeck,\n      filteredDeck: newDeck,\n    });\n  };\n\n  useEffect(() => {\n    const verifyCardData = () => {\n      const { cardName, cardImage, cardDescription,\n        cardAttr1, cardAttr2, cardAttr3 } = cardData;\n      if (\n        cardName !== '' && cardImage !== '' && cardDescription !== ''\n          && Number(cardAttr1) >= 0 && Number(cardAttr1) <= ATTRLIMITER\n          && Number(cardAttr2) >= 0 && Number(cardAttr2) <= ATTRLIMITER\n          && Number(cardAttr3) >= 0 && Number(cardAttr3) <= ATTRLIMITER\n          && (Number(cardAttr1) + Number(cardAttr2)\n          + Number(cardAttr3)) <= ALLATTRSUMLIMITER\n      ) {\n        return setIsSaveBtnDisabled(false);\n      } return setIsSaveBtnDisabled(true);\n    };\n    verifyCardData();\n  }, [cardData]);\n\n  return (\n    <div id=\"card-creation\" className=\"card-form\">\n      <h1 className=\"card-form-title\">\n        Crie sua carta\n      </h1>\n      <form className=\"card-form-body\">\n        <h2 className=\"card-form-input-title\">\n          Nome:\n        </h2>\n        <input\n          type=\"text\"\n          className=\"card-form-input\"\n          name=\"cardName\"\n          value={ cardData.cardName }\n          onChange={ handleChanger }\n          data-testid=\"name-input\"\n        />\n        <p className=\"card-form-input-text\">\n          Digite aqui o nome do seu Pokémon\n        </p>\n        <h2 className=\"card-form-input-title\">\n          Imagem:\n        </h2>\n        <input\n          className=\"card-form-input\"\n          type=\"text\"\n          name=\"cardImage\"\n          value={ cardData.cardImage }\n          onChange={ handleChanger }\n          data-testid=\"image-input\"\n        />\n        <p className=\"card-form-input-text\">\n          Insira abaixo a url de alguma imagem do seu Pokémon\n        </p>\n        <h2 className=\"card-form-input-title\">Descrição:</h2>\n        <textarea\n          className=\"card-form-description-input\"\n          name=\"cardDescription\"\n          value={ cardData.cardDescription }\n          onChange={ handleChanger }\n          data-testid=\"description-input\"\n        />\n        <p className=\"card-form-input-text\">\n          Descreva um pouco mais o seu Pokémon e guarde informações valiosas\n        </p>\n        <h2 className=\"card-form-input-title\">\n          Atributos:\n        </h2>\n        <div className=\"attr-inputs\">\n          <div>\n            <h3 className=\"attr-title\">\n              Vitalidade\n            </h3>\n            <input\n              className=\"attr-input\"\n              type=\"number\"\n              name=\"cardAttr1\"\n              value={ cardData.cardAttr1 }\n              onChange={ handleChanger }\n              data-testid=\"attr1-input\"\n            />\n          </div>\n          <div>\n            <h3 className=\"attr-title\">\n              Velocidade\n            </h3>\n            <input\n              className=\"attr-input\"\n              type=\"number\"\n              name=\"cardAttr2\"\n              value={ cardData.cardAttr2 }\n              onChange={ handleChanger }\n              data-testid=\"attr2-input\"\n            />\n          </div>\n          <div>\n            <h3 className=\"attr-title\">\n              Força\n            </h3>\n            <input\n              className=\"attr-input\"\n              type=\"number\"\n              name=\"cardAttr3\"\n              value={ cardData.cardAttr3 }\n              onChange={ handleChanger }\n              data-testid=\"attr3-input\"\n            />\n          </div>\n        </div>\n        <p className=\"card-form-input-text\">\n          Agora você pode definir cada um dos três atributos do seu Pokémon\n        </p>\n        {\n          cardData.hasTrunfo ? (\n            <h1 className=\"super-trunfo-title\">\n              Você já tem um Super Trunfo em seu baralho\n            </h1>\n          ) : (\n            <div className=\"super-trunfo-container\">\n              <h2 className=\"super-trunfo-title\">\n                Super trunfo?\n              </h2>\n              <input\n                className=\"super-trunfo-checkbox\"\n                type=\"checkbox\"\n                name=\"cardTrunfo\"\n                checked={ cardData.cardTrunfo }\n                onChange={ handleChanger }\n                data-testid=\"trunfo-input\"\n              />\n            </div>\n          )\n        }\n        <p className=\"card-form-input-text\">\n          Decida se essa carta é o seu Super Trunfo, lembre-se de que só\n          pode haver um Super Trunfo no seu baralho!\n        </p>\n        <div className=\"rarity-container\">\n          <h2 className=\"rarity-title\">\n            Raridade:\n          </h2>\n          <select\n            className=\"rarity-select\"\n            name=\"cardRare\"\n            value={ cardData.cardRare }\n            onChange={ handleChanger }\n            data-testid=\"rare-input\"\n          >\n            <option value=\"normal\">Normal</option>\n            <option value=\"raro\">Raro</option>\n            <option value=\"muito raro\">Muito Raro</option>\n          </select>\n        </div>\n        <p className=\"card-form-input-text\">\n          Defina o quão rara é essa nova carta\n        </p>\n      </form>\n      <a href={ `#${cardData.deckCards.length - 1}` }>\n        <button\n          className=\"save-card-btn\"\n          type=\"button\"\n          disabled={ isSaveBtnDisabled }\n          data-testid=\"save-button\"\n          onClick={ saveCard }\n        >\n          Salvar\n        </button>\n      </a>\n    </div>\n  );\n}\n\nCardForm.propTypes = {\n  value: PropTypes.shape({\n    cardData: PropTypes.objectOf.isRequired,\n    setCardData: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","const capitalize = (phrase) => {\n  const words = phrase.split(' ');\n\n  const capitalizedPhrase = words.map((word) => (\n    word[0].toUpperCase() + word.substring(1)\n  )).join(' ');\n\n  return capitalizedPhrase;\n};\n\nexport default capitalize;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Card.css';\nimport Aos from 'aos';\nimport capitalize from '../utils/capitalize';\nimport 'aos/dist/aos.css';\n\nexport default function CardPreview({ value }) {\n  const [isImage, setIsImage] = useState(false);\n\n  const { cardName, cardImage, cardDescription,\n    cardAttr1, cardAttr2, cardAttr3, cardTrunfo, cardRare } = value;\n\n  useEffect(() => {\n    Aos.init({\n      duration: 1000,\n    });\n\n    const verifyCardImage = async () => {\n      const response = /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(cardImage);\n\n      return response ? setIsImage(true) : setIsImage(false);\n    };\n    verifyCardImage();\n  }, [cardImage]);\n\n  return (\n    <div className=\"card-preview-section\">\n      <h1 className=\"card-preview-title\">Pré-visualize sua carta</h1>\n      <div className=\"card-preview\" data-aos=\"fade-up\">\n        <div className=\"card-preview-upper-container\">\n          <div className=\"card-preview-info-container\">\n            <h3 className=\"card-preview-name\" data-testid=\"name-card\">\n              {cardName}\n              {cardTrunfo ? (\n                <p\n                  className=\"card-preview-trunfo\"\n                  data-testid=\"trunfo-card\"\n                >\n                  ⭐\n                </p>\n              ) : (null)}\n            </h3>\n            {isImage ? (\n              <img\n                className=\"card-preview-image\"\n                data-testid=\"image-card\"\n                src={ cardImage }\n                alt={ cardName }\n              />\n            ) : (\n              <div className=\"card-preview-image\" data-testid=\"image-card-default\" />\n            )}\n          </div>\n          <div className=\"card-preview-attr-container\">\n            <h3 className=\"card-preview-attr-name\">VIT</h3>\n            <h3\n              className=\"card-preview-attr-value\"\n              data-testid=\"attr1-card\"\n            >\n              {cardAttr1}\n            </h3>\n            <h3 className=\"card-preview-attr-name\">VEL</h3>\n            <h3\n              className=\"card-preview-attr-value\"\n              data-testid=\"attr2-card\"\n            >\n              {cardAttr2}\n            </h3>\n            <h3 className=\"card-preview-attr-name\">FOR</h3>\n            <h3\n              className=\"card-preview-attr-value\"\n              data-testid=\"attr3-card\"\n            >\n              {cardAttr3}\n            </h3>\n          </div>\n        </div>\n        <div className=\"card-preview-lower-container\">\n          <h3\n            className=\"card-preview-rare\"\n            data-testid=\"rare-card\"\n          >\n            {capitalize(cardRare)}\n          </h3>\n          <p\n            className=\"card-preview-description\"\n            data-testid=\"description-card\"\n          >\n            {cardDescription}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCardPreview.propTypes = {\n  value: PropTypes.shape({\n    cardName: PropTypes.string.isRequired,\n    cardImage: PropTypes.string.isRequired,\n    cardDescription: PropTypes.string.isRequired,\n    cardAttr1: PropTypes.string.isRequired,\n    cardAttr2: PropTypes.string.isRequired,\n    cardAttr3: PropTypes.string.isRequired,\n    cardRare: PropTypes.string.isRequired,\n    cardTrunfo: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Card.css';\nimport capitalize from '../utils/capitalize';\n\nexport default function Card({ value }) {\n  const [isImage, setIsImage] = useState(false);\n\n  const { cardName, cardImage, cardDescription,\n    cardAttr1, cardAttr2, cardAttr3, cardTrunfo, cardRare } = value;\n\n  useEffect(() => {\n    const verifyCardImage = async () => {\n      const response = /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(cardImage);\n\n      return response ? setIsImage(true) : setIsImage(false);\n    };\n    verifyCardImage();\n  }, [cardImage]);\n\n  return (\n    <div className=\"card-created\">\n      <div className=\"card-preview-upper-container\">\n        <div className=\"card-preview-info-container\">\n          <h3 className=\"card-preview-name\" data-testid=\"name-card\">\n            {cardName}\n            {cardTrunfo ? (\n              <p\n                className=\"card-preview-trunfo\"\n                data-testid=\"trunfo-card\"\n              >\n                ⭐\n              </p>\n            ) : (null)}\n          </h3>\n          {isImage ? (\n            <img\n              className=\"card-preview-image\"\n              data-testid=\"image-card\"\n              src={ cardImage }\n              alt={ cardName }\n            />\n          ) : (\n            <div className=\"card-preview-image\" data-testid=\"image-card-default\" />\n          )}\n        </div>\n        <div className=\"card-preview-attr-container\">\n          <h3 className=\"card-preview-attr-name\">VIT</h3>\n          <h3\n            className=\"card-preview-attr-value\"\n            data-testid=\"attr1-card\"\n          >\n            {cardAttr1}\n          </h3>\n          <h3 className=\"card-preview-attr-name\">VEL</h3>\n          <h3\n            className=\"card-preview-attr-value\"\n            data-testid=\"attr2-card\"\n          >\n            {cardAttr2}\n          </h3>\n          <h3 className=\"card-preview-attr-name\">FOR</h3>\n          <h3\n            className=\"card-preview-attr-value\"\n            data-testid=\"attr3-card\"\n          >\n            {cardAttr3}\n          </h3>\n        </div>\n      </div>\n      <div className=\"card-preview-lower-container\">\n        <h3\n          className=\"card-preview-rare\"\n          data-testid=\"rare-card\"\n        >\n          {capitalize(cardRare)}\n        </h3>\n        <p\n          className=\"card-preview-description\"\n          data-testid=\"description-card\"\n        >\n          {cardDescription}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  value: PropTypes.shape({\n    cardName: PropTypes.string.isRequired,\n    cardImage: PropTypes.string.isRequired,\n    cardDescription: PropTypes.string.isRequired,\n    cardAttr1: PropTypes.string.isRequired,\n    cardAttr2: PropTypes.string.isRequired,\n    cardAttr3: PropTypes.string.isRequired,\n    cardRare: PropTypes.string.isRequired,\n    cardTrunfo: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { useEffect } from 'react';\nimport Aos from 'aos';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport 'aos/dist/aos.css';\n\nexport default function Deck({ value }) {\n  const { cardData, setCardData } = value;\n\n  const deleteCard = ({ target }) => {\n    const targetCard = target.parentElement;\n\n    const newDeck = cardData.deckCards.filter((card) => {\n      const cardIndex = cardData.deckCards.indexOf(card);\n\n      if (cardIndex !== Number(targetCard.id)) {\n        return card;\n      } return false;\n    });\n\n    const stillHasTrunfo = cardData.deckCards.find((card) => card.cardTrunfo === true);\n\n    localStorage.setItem('deck', JSON.stringify(newDeck));\n\n    if (stillHasTrunfo) {\n      setCardData({ ...cardData, deckCards: newDeck, filteredDeck: newDeck });\n    } setCardData({\n      ...cardData,\n      hasTrunfo: false,\n      deckCards: newDeck,\n      filteredDeck: newDeck,\n    });\n  };\n\n  useEffect(() => {\n    Aos.init({\n      duration: 1000,\n    });\n  }, []);\n\n  return (\n    <>\n      {cardData.filteredDeck.map((card, index) => (\n        <div className=\"card-container\" id={ index } key={ index } data-aos=\"fade-up\">\n          <Card value={ card } />\n          <button\n            className=\"delete-btn\"\n            type=\"button\"\n            onClick={ deleteCard }\n            data-testid=\"delete-button\"\n          >\n            Excluir\n          </button>\n        </div>\n      ))}\n    </>\n  );\n}\n\nDeck.propTypes = {\n  value: PropTypes.shape({\n    cardData: PropTypes.shape({\n      deckCards: PropTypes.arrayOf.isRequired,\n      filteredDeck: PropTypes.arrayOf.isRequired,\n    }).isRequired,\n    setCardData: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/eevee.09964170.png\";","export default __webpack_public_path__ + \"static/media/pokeball.043527a9.png\";","import React, { useEffect } from 'react';\nimport Aos from 'aos';\nimport '../styles/Header.css';\nimport Eevee from '../assets/images/eevee.png';\nimport Pokeball from '../assets/images/pokeball.png';\nimport 'aos/dist/aos.css';\n\nexport default function Header() {\n  useEffect(() => {\n    Aos.init({\n      duration: 1000,\n    });\n  }, []);\n\n  return (\n    <header className=\"header-body\">\n      <div>\n        <img\n          src={ Eevee }\n          alt=\"Eevee\"\n          className=\"header-eevee\"\n          data-aos=\"fade-left\"\n        />\n        <img\n          src={ Pokeball }\n          alt=\"Pokébola\"\n          className=\"header-pokeball-3\"\n        />\n        <a href=\"/\">\n          <h1 className=\"header-title\" data-aos=\"fade-right\">Pokétrunfo</h1>\n        </a>\n        <p className=\"header-text\" data-aos=\"fade-up\">\n          Crie suas cartas, monte seu baralho e divirta-se!\n        </p>\n        <img\n          className=\"header-pokeball-1\"\n          src={ Pokeball }\n          alt=\"Pokébola\"\n        />\n        <img\n          className=\"header-pokeball-2\"\n          src={ Pokeball }\n          alt=\"Pokébola\"\n        />\n      </div>\n      <div className=\"pokeball-line-header\">\n        <a\n          className=\"gh-link\"\n          href=\"https://github.com/rafaelimaf\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          data-aos-delay=\"300\"\n          data-aos=\"fade-up\"\n        >\n          Github\n        </a>\n        <a\n          className=\"in-link\"\n          href=\"https://linkedin.com/in/rafaelimaf\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          data-aos-delay=\"500\"\n          data-aos=\"fade-up\"\n        >\n          Linkedin\n        </a>\n        <a href=\"#card-creation\">\n          <button\n            type=\"button\"\n            aria-label=\"button\"\n            className=\"pokeball-btn\"\n          >\n            <h3 className=\"pokeball-btn-text\">\n              Go!\n            </h3>\n          </button>\n        </a>\n      </div>\n    </header>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pikachu.57a1a94d.png\";","import React, { useState, useEffect } from 'react';\nimport Aos from 'aos';\nimport '../styles/DeckFilters.css';\nimport PropTypes from 'prop-types';\nimport Pokeball from '../assets/images/pokeball.png';\nimport Pikachu from '../assets/images/pikachu.png';\nimport 'aos/dist/aos.css';\n\nexport default function DeckFilters({ value }) {\n  const { cardData, setCardData } = value;\n\n  const [filterParams, setFilterParams] = useState({\n    nameFilter: '',\n    rareFilter: 'todas',\n    trunfoFilter: false,\n  });\n\n  const filterDeck = () => {\n    const { nameFilter, rareFilter, trunfoFilter } = filterParams;\n\n    const newFilteredDeck = cardData.deckCards.filter((card) => (\n      card.cardName.toLowerCase().includes(nameFilter.toLowerCase())\n      && (card.cardRare === rareFilter || rareFilter === 'todas')\n      && (card.cardTrunfo === trunfoFilter || !trunfoFilter)\n    ));\n\n    return setCardData({ ...cardData, filteredDeck: newFilteredDeck });\n  };\n\n  const handleChanger = ({ target }) => {\n    const inputValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    setFilterParams((prevState) => (\n      { ...prevState, [target.name]: inputValue }\n    ));\n  };\n\n  useEffect(() => {\n    Aos.init({\n      duration: 1000,\n    });\n  }, []);\n\n  return (\n    <div className=\"deck-filters-body\">\n      <img className=\"deck-filters-pokeball-1\" src={ Pokeball } alt=\"pokeball\" />\n      <img className=\"deck-filters-pokeball-2\" src={ Pokeball } alt=\"pokeball\" />\n      <div className=\"deck-filters-description\">\n        <h1 className=\"deck-filters-title\" data-aos=\"fade-up\">Seu Baralho</h1>\n        <p className=\"deck-filters-text\">\n          Confira abaixo todas as suas cartas criadas.\n          Utilize os filtros à direita para encontrá-las mais rapidamente!\n        </p>\n      </div>\n      <div className=\"deck-filters-inputs\">\n        <h3 className=\"deck-filters-input-title\">Filtre por nome:</h3>\n        <input\n          className=\"deck-filters-name\"\n          type=\"text\"\n          name=\"nameFilter\"\n          onChange={ handleChanger }\n          data-testid=\"name-filter\"\n        />\n        <h3 className=\"deck-filters-input-title\">Filtre por raridade:</h3>\n        <select\n          className=\"deck-filters-rare\"\n          name=\"rareFilter\"\n          onChange={ handleChanger }\n          data-testid=\"rare-filter\"\n        >\n          <option value=\"todas\">Todas</option>\n          <option value=\"normal\">Normal</option>\n          <option value=\"raro\">Raro</option>\n          <option value=\"muito raro\">Muito Raro</option>\n        </select>\n        <div className=\"deck-filters-trunfo-container\">\n          <h3 className=\"deck-filters-input-title\">Filtre por trunfo:</h3>\n          <input\n            className=\"deck-filters-trunfo\"\n            type=\"checkbox\"\n            name=\"trunfoFilter\"\n            onChange={ handleChanger }\n            data-testid=\"trunfo-filter\"\n          />\n        </div>\n        <button\n          className=\"filter-btn\"\n          type=\"button\"\n          onClick={ filterDeck }\n          data-testid=\"filter-button\"\n        >\n          Filtrar\n        </button>\n      </div>\n      <img\n        className=\"deck-filters-pikachu\"\n        src={ Pikachu }\n        alt=\"pikachu\"\n        data-aos=\"fade-right\"\n      />\n    </div>\n  );\n}\n\nDeckFilters.propTypes = {\n  value: PropTypes.shape({\n    cardData: PropTypes.shape({\n      deckCards: PropTypes.arrayOf.isRequired,\n    }).isRequired,\n    setCardData: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport CardForm from './components/CardForm';\nimport CardPreview from './components/CardPreview';\nimport Deck from './components/Deck';\nimport Header from './components/Header';\nimport DeckFilters from './components/DeckFilters';\nimport './styles/index.css';\n\nexport default function App() {\n  const [cardData, setCardData] = useState({\n    cardName: '',\n    cardImage: '',\n    cardDescription: '',\n    cardAttr1: '0',\n    cardAttr2: '0',\n    cardAttr3: '0',\n    cardTrunfo: false,\n    cardRare: 'normal',\n    deckCards: [],\n    filteredDeck: [],\n    hasTrunfo: false,\n  });\n\n  useEffect(() => {\n    const recoveredDeck = localStorage.getItem('deck');\n\n    if (recoveredDeck === null) {\n      return;\n    }\n    setCardData({\n      ...cardData,\n      deckCards: JSON.parse(recoveredDeck),\n      filteredDeck: JSON.parse(recoveredDeck),\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <section className=\"card-creation-section\">\n        <CardForm value={ { cardData, setCardData } } />\n        <CardPreview value={ cardData } />\n      </section>\n      <section className=\"card-display-section\">\n        <DeckFilters value={ { cardData, setCardData } } />\n        <Deck value={ { cardData, setCardData } } />\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}